import { EventEmitter, TemplateRef } from '@angular/core';
/** Column definition associated with a `NbSortHeaderDirective`. */
import * as ɵngcc0 from '@angular/core';
interface NbSortHeaderColumnDef {
    name: string;
}
export interface NbSortRequest {
    column: string;
    direction: NbSortDirection;
}
export interface NbSortable {
    sort(sortRequest: NbSortRequest): any;
}
export declare enum NbSortDirection {
    ASCENDING = "asc",
    DESCENDING = "desc",
    NONE = ""
}
/**
 * Directive triggers sort method of passed object when sort header changes direction
 */
export declare class NbSortDirective {
    sortable: NbSortable;
    sort: EventEmitter<NbSortRequest>;
    emitSort(sortRequest: NbSortRequest): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NbSortDirective>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<NbSortDirective, "[nbSort]", never, {
    "sortable": "nbSort";
}, {
    "sort": "sort";
}, never>;
}
export interface NbSortHeaderIconDirectiveContext {
    $implicit: NbSortDirection;
    isAscending: boolean;
    isDescending: boolean;
    isNone: boolean;
}
/**
 * Directive for headers sort icons. Mark you icon implementation with this structural directive and
 * it'll set template's implicit context with current direction. Context also has `isAscending`,
 * `isDescending` and `isNone` properties.
 */
export declare class NbSortHeaderIconDirective {
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NbSortHeaderIconDirective>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<NbSortHeaderIconDirective, "[nbSortHeaderIcon]", never, {}, {}, never>;
}
export declare class NbSortIconComponent {
    direction: NbSortDirection;
    isAscending(): boolean;
    isDescending(): boolean;
    isDirectionSet(): boolean;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NbSortIconComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NbSortIconComponent, "nb-sort-icon", never, {
    "direction": "direction";
}, {}, never>;
}
/**
 * Marks header as sort header so it emitting sort event when clicked.
 */
export declare class NbSortHeaderComponent {
    private sort;
    private columnDef;
    sortIcon: TemplateRef<NbSortHeaderIconDirectiveContext>;
    /**
     * Current sort direction. Possible values: `asc`, `desc`, ``(none)
     * @type {NbSortDirection}
     */
    direction: NbSortDirection;
    private disabledValue;
    /**
     * Disable sort header
     */
    disabled: boolean;
    sortIfEnabled(): void;
    constructor(sort: NbSortDirective, columnDef: NbSortHeaderColumnDef);
    isAscending(): boolean;
    isDescending(): boolean;
    sortData(): void;
    getIconContext(): NbSortHeaderIconDirectiveContext;
    getDisabledAttributeValue(): '' | null;
    private createSortRequest;
    private getNextDirection;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NbSortHeaderComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NbSortHeaderComponent, "[nbSortHeader]", never, {
    "disabled": "disabled";
    "direction": "nbSortHeader";
}, {}, ["sortIcon"]>;
}
export {};

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJlZS1ncmlkLXNvcnQuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbInRyZWUtZ3JpZC1zb3J0LmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7QUFFQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQXNCQTs7Ozs7Ozs7Ozs7Ozs7O0FBYUE7Ozs7Ozs7Ozs7QUFNQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUEyQkEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFdmVudEVtaXR0ZXIsIFRlbXBsYXRlUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG4vKiogQ29sdW1uIGRlZmluaXRpb24gYXNzb2NpYXRlZCB3aXRoIGEgYE5iU29ydEhlYWRlckRpcmVjdGl2ZWAuICovXG5pbnRlcmZhY2UgTmJTb3J0SGVhZGVyQ29sdW1uRGVmIHtcbiAgICBuYW1lOiBzdHJpbmc7XG59XG5leHBvcnQgaW50ZXJmYWNlIE5iU29ydFJlcXVlc3Qge1xuICAgIGNvbHVtbjogc3RyaW5nO1xuICAgIGRpcmVjdGlvbjogTmJTb3J0RGlyZWN0aW9uO1xufVxuZXhwb3J0IGludGVyZmFjZSBOYlNvcnRhYmxlIHtcbiAgICBzb3J0KHNvcnRSZXF1ZXN0OiBOYlNvcnRSZXF1ZXN0KTogYW55O1xufVxuZXhwb3J0IGRlY2xhcmUgZW51bSBOYlNvcnREaXJlY3Rpb24ge1xuICAgIEFTQ0VORElORyA9IFwiYXNjXCIsXG4gICAgREVTQ0VORElORyA9IFwiZGVzY1wiLFxuICAgIE5PTkUgPSBcIlwiXG59XG4vKipcbiAqIERpcmVjdGl2ZSB0cmlnZ2VycyBzb3J0IG1ldGhvZCBvZiBwYXNzZWQgb2JqZWN0IHdoZW4gc29ydCBoZWFkZXIgY2hhbmdlcyBkaXJlY3Rpb25cbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgTmJTb3J0RGlyZWN0aXZlIHtcbiAgICBzb3J0YWJsZTogTmJTb3J0YWJsZTtcbiAgICBzb3J0OiBFdmVudEVtaXR0ZXI8TmJTb3J0UmVxdWVzdD47XG4gICAgZW1pdFNvcnQoc29ydFJlcXVlc3Q6IE5iU29ydFJlcXVlc3QpOiB2b2lkO1xufVxuZXhwb3J0IGludGVyZmFjZSBOYlNvcnRIZWFkZXJJY29uRGlyZWN0aXZlQ29udGV4dCB7XG4gICAgJGltcGxpY2l0OiBOYlNvcnREaXJlY3Rpb247XG4gICAgaXNBc2NlbmRpbmc6IGJvb2xlYW47XG4gICAgaXNEZXNjZW5kaW5nOiBib29sZWFuO1xuICAgIGlzTm9uZTogYm9vbGVhbjtcbn1cbi8qKlxuICogRGlyZWN0aXZlIGZvciBoZWFkZXJzIHNvcnQgaWNvbnMuIE1hcmsgeW91IGljb24gaW1wbGVtZW50YXRpb24gd2l0aCB0aGlzIHN0cnVjdHVyYWwgZGlyZWN0aXZlIGFuZFxuICogaXQnbGwgc2V0IHRlbXBsYXRlJ3MgaW1wbGljaXQgY29udGV4dCB3aXRoIGN1cnJlbnQgZGlyZWN0aW9uLiBDb250ZXh0IGFsc28gaGFzIGBpc0FzY2VuZGluZ2AsXG4gKiBgaXNEZXNjZW5kaW5nYCBhbmQgYGlzTm9uZWAgcHJvcGVydGllcy5cbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgTmJTb3J0SGVhZGVySWNvbkRpcmVjdGl2ZSB7XG59XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBOYlNvcnRJY29uQ29tcG9uZW50IHtcbiAgICBkaXJlY3Rpb246IE5iU29ydERpcmVjdGlvbjtcbiAgICBpc0FzY2VuZGluZygpOiBib29sZWFuO1xuICAgIGlzRGVzY2VuZGluZygpOiBib29sZWFuO1xuICAgIGlzRGlyZWN0aW9uU2V0KCk6IGJvb2xlYW47XG59XG4vKipcbiAqIE1hcmtzIGhlYWRlciBhcyBzb3J0IGhlYWRlciBzbyBpdCBlbWl0dGluZyBzb3J0IGV2ZW50IHdoZW4gY2xpY2tlZC5cbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgTmJTb3J0SGVhZGVyQ29tcG9uZW50IHtcbiAgICBwcml2YXRlIHNvcnQ7XG4gICAgcHJpdmF0ZSBjb2x1bW5EZWY7XG4gICAgc29ydEljb246IFRlbXBsYXRlUmVmPE5iU29ydEhlYWRlckljb25EaXJlY3RpdmVDb250ZXh0PjtcbiAgICAvKipcbiAgICAgKiBDdXJyZW50IHNvcnQgZGlyZWN0aW9uLiBQb3NzaWJsZSB2YWx1ZXM6IGBhc2NgLCBgZGVzY2AsIGBgKG5vbmUpXG4gICAgICogQHR5cGUge05iU29ydERpcmVjdGlvbn1cbiAgICAgKi9cbiAgICBkaXJlY3Rpb246IE5iU29ydERpcmVjdGlvbjtcbiAgICBwcml2YXRlIGRpc2FibGVkVmFsdWU7XG4gICAgLyoqXG4gICAgICogRGlzYWJsZSBzb3J0IGhlYWRlclxuICAgICAqL1xuICAgIGRpc2FibGVkOiBib29sZWFuO1xuICAgIHNvcnRJZkVuYWJsZWQoKTogdm9pZDtcbiAgICBjb25zdHJ1Y3Rvcihzb3J0OiBOYlNvcnREaXJlY3RpdmUsIGNvbHVtbkRlZjogTmJTb3J0SGVhZGVyQ29sdW1uRGVmKTtcbiAgICBpc0FzY2VuZGluZygpOiBib29sZWFuO1xuICAgIGlzRGVzY2VuZGluZygpOiBib29sZWFuO1xuICAgIHNvcnREYXRhKCk6IHZvaWQ7XG4gICAgZ2V0SWNvbkNvbnRleHQoKTogTmJTb3J0SGVhZGVySWNvbkRpcmVjdGl2ZUNvbnRleHQ7XG4gICAgZ2V0RGlzYWJsZWRBdHRyaWJ1dGVWYWx1ZSgpOiAnJyB8IG51bGw7XG4gICAgcHJpdmF0ZSBjcmVhdGVTb3J0UmVxdWVzdDtcbiAgICBwcml2YXRlIGdldE5leHREaXJlY3Rpb247XG59XG5leHBvcnQge307XG4iXX0=