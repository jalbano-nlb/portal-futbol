/**
 * @license
 * Copyright Akveo. All Rights Reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 */
import { ChangeDetectorRef, EventEmitter } from '@angular/core';
import { DomSanitizer } from '@angular/platform-browser';
import { NbComponentStatus } from '../component-status';
/**
 * Chat form component.
 *
 * Show a message form with a send message button.
 *
 * ```ts
 * <nb-chat-form showButton="true" buttonIcon="nb-send">
 * </nb-chat-form>
 * ```
 *
 * When `[dropFiles]="true"` handles files drag&drop with a file preview.
 *
 * Drag & drop available for files and images:
 * @stacked-example(Drag & Drop Chat, chat/chat-drop.component)
 *
 * New message could be tracked outside by using `(send)` output.
 *
 * ```ts
 * <nb-chat-form (send)="onNewMessage($event)">
 * </nb-chat-form>
 *
 * // ...
 *
 * onNewMessage({ message: string, files: any[] }) {
 *   this.service.sendToServer(message, files);
 * }
 * ```
 */
import * as ɵngcc0 from '@angular/core';
export declare class NbChatFormComponent {
    protected cd: ChangeDetectorRef;
    protected domSanitizer: DomSanitizer;
    status: NbComponentStatus;
    inputFocus: boolean;
    inputHover: boolean;
    droppedFiles: any[];
    imgDropTypes: string[];
    /**
     * Predefined message text
     * @type {string}
     */
    message: string;
    /**
     * Send button title
     * @type {string}
     */
    buttonTitle: string;
    /**
     * Send button icon, shown if `buttonTitle` is empty
     * @type {string}
     */
    buttonIcon: string;
    /**
     * Show send button
     * @type {boolean}
     */
    showButton: boolean;
    /**
     * Show send button
     * @type {boolean}
     */
    dropFiles: boolean;
    /**
     *
     * @type {EventEmitter<{ message: string, files: File[] }>}
     */
    send: EventEmitter<{
        message: string;
        files: File[];
    }>;
    fileOver: boolean;
    constructor(cd: ChangeDetectorRef, domSanitizer: DomSanitizer);
    onDrop(event: any): void;
    removeFile(file: any): void;
    onDragOver(): void;
    onDragLeave(): void;
    sendMessage(): void;
    setStatus(status: NbComponentStatus): void;
    getInputStatus(): NbComponentStatus;
    getButtonStatus(): NbComponentStatus;
    protected getHighlightStatus(): NbComponentStatus;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NbChatFormComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NbChatFormComponent, "nb-chat-form", never, {
    "message": "message";
    "buttonTitle": "buttonTitle";
    "buttonIcon": "buttonIcon";
    "showButton": "showButton";
    "dropFiles": "dropFiles";
}, {
    "send": "send";
}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hhdC1mb3JtLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJjaGF0LWZvcm0uY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFvQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBb0RBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IEFrdmVvLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLiBTZWUgTGljZW5zZS50eHQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbi5cbiAqL1xuaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0b3JSZWYsIEV2ZW50RW1pdHRlciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRG9tU2FuaXRpemVyIH0gZnJvbSAnQGFuZ3VsYXIvcGxhdGZvcm0tYnJvd3Nlcic7XG5pbXBvcnQgeyBOYkNvbXBvbmVudFN0YXR1cyB9IGZyb20gJy4uL2NvbXBvbmVudC1zdGF0dXMnO1xuLyoqXG4gKiBDaGF0IGZvcm0gY29tcG9uZW50LlxuICpcbiAqIFNob3cgYSBtZXNzYWdlIGZvcm0gd2l0aCBhIHNlbmQgbWVzc2FnZSBidXR0b24uXG4gKlxuICogYGBgdHNcbiAqIDxuYi1jaGF0LWZvcm0gc2hvd0J1dHRvbj1cInRydWVcIiBidXR0b25JY29uPVwibmItc2VuZFwiPlxuICogPC9uYi1jaGF0LWZvcm0+XG4gKiBgYGBcbiAqXG4gKiBXaGVuIGBbZHJvcEZpbGVzXT1cInRydWVcImAgaGFuZGxlcyBmaWxlcyBkcmFnJmRyb3Agd2l0aCBhIGZpbGUgcHJldmlldy5cbiAqXG4gKiBEcmFnICYgZHJvcCBhdmFpbGFibGUgZm9yIGZpbGVzIGFuZCBpbWFnZXM6XG4gKiBAc3RhY2tlZC1leGFtcGxlKERyYWcgJiBEcm9wIENoYXQsIGNoYXQvY2hhdC1kcm9wLmNvbXBvbmVudClcbiAqXG4gKiBOZXcgbWVzc2FnZSBjb3VsZCBiZSB0cmFja2VkIG91dHNpZGUgYnkgdXNpbmcgYChzZW5kKWAgb3V0cHV0LlxuICpcbiAqIGBgYHRzXG4gKiA8bmItY2hhdC1mb3JtIChzZW5kKT1cIm9uTmV3TWVzc2FnZSgkZXZlbnQpXCI+XG4gKiA8L25iLWNoYXQtZm9ybT5cbiAqXG4gKiAvLyAuLi5cbiAqXG4gKiBvbk5ld01lc3NhZ2UoeyBtZXNzYWdlOiBzdHJpbmcsIGZpbGVzOiBhbnlbXSB9KSB7XG4gKiAgIHRoaXMuc2VydmljZS5zZW5kVG9TZXJ2ZXIobWVzc2FnZSwgZmlsZXMpO1xuICogfVxuICogYGBgXG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIE5iQ2hhdEZvcm1Db21wb25lbnQge1xuICAgIHByb3RlY3RlZCBjZDogQ2hhbmdlRGV0ZWN0b3JSZWY7XG4gICAgcHJvdGVjdGVkIGRvbVNhbml0aXplcjogRG9tU2FuaXRpemVyO1xuICAgIHN0YXR1czogTmJDb21wb25lbnRTdGF0dXM7XG4gICAgaW5wdXRGb2N1czogYm9vbGVhbjtcbiAgICBpbnB1dEhvdmVyOiBib29sZWFuO1xuICAgIGRyb3BwZWRGaWxlczogYW55W107XG4gICAgaW1nRHJvcFR5cGVzOiBzdHJpbmdbXTtcbiAgICAvKipcbiAgICAgKiBQcmVkZWZpbmVkIG1lc3NhZ2UgdGV4dFxuICAgICAqIEB0eXBlIHtzdHJpbmd9XG4gICAgICovXG4gICAgbWVzc2FnZTogc3RyaW5nO1xuICAgIC8qKlxuICAgICAqIFNlbmQgYnV0dG9uIHRpdGxlXG4gICAgICogQHR5cGUge3N0cmluZ31cbiAgICAgKi9cbiAgICBidXR0b25UaXRsZTogc3RyaW5nO1xuICAgIC8qKlxuICAgICAqIFNlbmQgYnV0dG9uIGljb24sIHNob3duIGlmIGBidXR0b25UaXRsZWAgaXMgZW1wdHlcbiAgICAgKiBAdHlwZSB7c3RyaW5nfVxuICAgICAqL1xuICAgIGJ1dHRvbkljb246IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBTaG93IHNlbmQgYnV0dG9uXG4gICAgICogQHR5cGUge2Jvb2xlYW59XG4gICAgICovXG4gICAgc2hvd0J1dHRvbjogYm9vbGVhbjtcbiAgICAvKipcbiAgICAgKiBTaG93IHNlbmQgYnV0dG9uXG4gICAgICogQHR5cGUge2Jvb2xlYW59XG4gICAgICovXG4gICAgZHJvcEZpbGVzOiBib29sZWFuO1xuICAgIC8qKlxuICAgICAqXG4gICAgICogQHR5cGUge0V2ZW50RW1pdHRlcjx7IG1lc3NhZ2U6IHN0cmluZywgZmlsZXM6IEZpbGVbXSB9Pn1cbiAgICAgKi9cbiAgICBzZW5kOiBFdmVudEVtaXR0ZXI8e1xuICAgICAgICBtZXNzYWdlOiBzdHJpbmc7XG4gICAgICAgIGZpbGVzOiBGaWxlW107XG4gICAgfT47XG4gICAgZmlsZU92ZXI6IGJvb2xlYW47XG4gICAgY29uc3RydWN0b3IoY2Q6IENoYW5nZURldGVjdG9yUmVmLCBkb21TYW5pdGl6ZXI6IERvbVNhbml0aXplcik7XG4gICAgb25Ecm9wKGV2ZW50OiBhbnkpOiB2b2lkO1xuICAgIHJlbW92ZUZpbGUoZmlsZTogYW55KTogdm9pZDtcbiAgICBvbkRyYWdPdmVyKCk6IHZvaWQ7XG4gICAgb25EcmFnTGVhdmUoKTogdm9pZDtcbiAgICBzZW5kTWVzc2FnZSgpOiB2b2lkO1xuICAgIHNldFN0YXR1cyhzdGF0dXM6IE5iQ29tcG9uZW50U3RhdHVzKTogdm9pZDtcbiAgICBnZXRJbnB1dFN0YXR1cygpOiBOYkNvbXBvbmVudFN0YXR1cztcbiAgICBnZXRCdXR0b25TdGF0dXMoKTogTmJDb21wb25lbnRTdGF0dXM7XG4gICAgcHJvdGVjdGVkIGdldEhpZ2hsaWdodFN0YXR1cygpOiBOYkNvbXBvbmVudFN0YXR1cztcbn1cbiJdfQ==