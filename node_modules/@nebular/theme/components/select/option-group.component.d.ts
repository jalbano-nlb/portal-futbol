import { AfterContentInit, OnDestroy, QueryList } from '@angular/core';
import { NbOptionComponent } from './option.component';
import * as ɵngcc0 from '@angular/core';
export declare class NbOptionGroupComponent implements AfterContentInit, OnDestroy {
    protected alive: boolean;
    title: string;
    disabled: boolean;
    protected _disabled: boolean;
    readonly disabledAttribute: '' | null;
    options: QueryList<NbOptionComponent<any>>;
    ngAfterContentInit(): void;
    ngOnDestroy(): void;
    /**
     * Sets disabled state for each option to current group disabled state.
     */
    protected updateOptionsDisabledState(): void;
    /**
     * Updates options disabled state after promise resolution.
     * This way change detection will be triggered after options state updated.
     * Use this method when updating options during change detection run (e.g. QueryList.changes, lifecycle hooks).
     */
    protected asyncUpdateOptionsDisabledState(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NbOptionGroupComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NbOptionGroupComponent, "nb-option-group", never, {
    "disabled": "disabled";
    "title": "title";
}, {}, ["options"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3B0aW9uLWdyb3VwLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJvcHRpb24tZ3JvdXAuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7OztBQUVBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFtQkEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBZnRlckNvbnRlbnRJbml0LCBPbkRlc3Ryb3ksIFF1ZXJ5TGlzdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTmJPcHRpb25Db21wb25lbnQgfSBmcm9tICcuL29wdGlvbi5jb21wb25lbnQnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgTmJPcHRpb25Hcm91cENvbXBvbmVudCBpbXBsZW1lbnRzIEFmdGVyQ29udGVudEluaXQsIE9uRGVzdHJveSB7XG4gICAgcHJvdGVjdGVkIGFsaXZlOiBib29sZWFuO1xuICAgIHRpdGxlOiBzdHJpbmc7XG4gICAgZGlzYWJsZWQ6IGJvb2xlYW47XG4gICAgcHJvdGVjdGVkIF9kaXNhYmxlZDogYm9vbGVhbjtcbiAgICByZWFkb25seSBkaXNhYmxlZEF0dHJpYnV0ZTogJycgfCBudWxsO1xuICAgIG9wdGlvbnM6IFF1ZXJ5TGlzdDxOYk9wdGlvbkNvbXBvbmVudDxhbnk+PjtcbiAgICBuZ0FmdGVyQ29udGVudEluaXQoKTogdm9pZDtcbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkO1xuICAgIC8qKlxuICAgICAqIFNldHMgZGlzYWJsZWQgc3RhdGUgZm9yIGVhY2ggb3B0aW9uIHRvIGN1cnJlbnQgZ3JvdXAgZGlzYWJsZWQgc3RhdGUuXG4gICAgICovXG4gICAgcHJvdGVjdGVkIHVwZGF0ZU9wdGlvbnNEaXNhYmxlZFN0YXRlKCk6IHZvaWQ7XG4gICAgLyoqXG4gICAgICogVXBkYXRlcyBvcHRpb25zIGRpc2FibGVkIHN0YXRlIGFmdGVyIHByb21pc2UgcmVzb2x1dGlvbi5cbiAgICAgKiBUaGlzIHdheSBjaGFuZ2UgZGV0ZWN0aW9uIHdpbGwgYmUgdHJpZ2dlcmVkIGFmdGVyIG9wdGlvbnMgc3RhdGUgdXBkYXRlZC5cbiAgICAgKiBVc2UgdGhpcyBtZXRob2Qgd2hlbiB1cGRhdGluZyBvcHRpb25zIGR1cmluZyBjaGFuZ2UgZGV0ZWN0aW9uIHJ1biAoZS5nLiBRdWVyeUxpc3QuY2hhbmdlcywgbGlmZWN5Y2xlIGhvb2tzKS5cbiAgICAgKi9cbiAgICBwcm90ZWN0ZWQgYXN5bmNVcGRhdGVPcHRpb25zRGlzYWJsZWRTdGF0ZSgpOiB2b2lkO1xufVxuIl19