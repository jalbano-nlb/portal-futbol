import { ChangeDetectorRef, ComponentFactoryResolver, ComponentRef, EmbeddedViewRef, Injector, ViewContainerRef } from '@angular/core';
import { NbPosition } from './overlay-position';
import { NbComponentPortal, NbPortalInjector, NbPortalOutletDirective, NbTemplatePortal } from './mapping';
import * as ɵngcc0 from '@angular/core';
export interface NbRenderableContainer {
    /**
     * A renderContent method renders content with provided context.
     * Naturally, this job has to be done by ngOnChanges lifecycle hook, but
     * ngOnChanges hook will be triggered only if we update content or context properties
     * through template property binding syntax. But in our case we're updating these properties programmatically.
     * */
    renderContent(): any;
}
export declare class NbPositionedContainer {
    position: NbPosition;
    readonly top: boolean;
    readonly topStart: boolean;
    readonly topEnd: boolean;
    readonly right: boolean;
    readonly endTop: boolean;
    readonly endBottom: boolean;
    readonly bottom: boolean;
    readonly bottomStart: boolean;
    readonly bottomEnd: boolean;
    readonly left: boolean;
    readonly startTop: boolean;
    readonly startBottom: boolean;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NbPositionedContainer>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NbPositionedContainer, "ng-component", never, {
    "position": "position";
}, {}, never>;
}
export declare class NbOverlayContainerComponent {
    protected vcr: ViewContainerRef;
    protected injector: Injector;
    private changeDetectorRef;
    portalOutlet: NbPortalOutletDirective;
    isAttached: boolean;
    content: string;
    constructor(vcr: ViewContainerRef, injector: Injector, changeDetectorRef: ChangeDetectorRef);
    readonly isStringContent: boolean;
    attachComponentPortal<T>(portal: NbComponentPortal<T>, context?: Object): ComponentRef<T>;
    attachTemplatePortal<C>(portal: NbTemplatePortal<C>): EmbeddedViewRef<C>;
    attachStringContent(content: string): void;
    detach(): void;
    protected createChildInjector(cfr: ComponentFactoryResolver): NbPortalInjector;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NbOverlayContainerComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NbOverlayContainerComponent, "nb-overlay-container", never, {}, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3ZlcmxheS1jb250YWluZXIuZC50cyIsInNvdXJjZXMiOlsib3ZlcmxheS1jb250YWluZXIuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7OztBQUdBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUF1QkE7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBZUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDaGFuZ2VEZXRlY3RvclJlZiwgQ29tcG9uZW50RmFjdG9yeVJlc29sdmVyLCBDb21wb25lbnRSZWYsIEVtYmVkZGVkVmlld1JlZiwgSW5qZWN0b3IsIFZpZXdDb250YWluZXJSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE5iUG9zaXRpb24gfSBmcm9tICcuL292ZXJsYXktcG9zaXRpb24nO1xuaW1wb3J0IHsgTmJDb21wb25lbnRQb3J0YWwsIE5iUG9ydGFsSW5qZWN0b3IsIE5iUG9ydGFsT3V0bGV0RGlyZWN0aXZlLCBOYlRlbXBsYXRlUG9ydGFsIH0gZnJvbSAnLi9tYXBwaW5nJztcbmV4cG9ydCBpbnRlcmZhY2UgTmJSZW5kZXJhYmxlQ29udGFpbmVyIHtcbiAgICAvKipcbiAgICAgKiBBIHJlbmRlckNvbnRlbnQgbWV0aG9kIHJlbmRlcnMgY29udGVudCB3aXRoIHByb3ZpZGVkIGNvbnRleHQuXG4gICAgICogTmF0dXJhbGx5LCB0aGlzIGpvYiBoYXMgdG8gYmUgZG9uZSBieSBuZ09uQ2hhbmdlcyBsaWZlY3ljbGUgaG9vaywgYnV0XG4gICAgICogbmdPbkNoYW5nZXMgaG9vayB3aWxsIGJlIHRyaWdnZXJlZCBvbmx5IGlmIHdlIHVwZGF0ZSBjb250ZW50IG9yIGNvbnRleHQgcHJvcGVydGllc1xuICAgICAqIHRocm91Z2ggdGVtcGxhdGUgcHJvcGVydHkgYmluZGluZyBzeW50YXguIEJ1dCBpbiBvdXIgY2FzZSB3ZSdyZSB1cGRhdGluZyB0aGVzZSBwcm9wZXJ0aWVzIHByb2dyYW1tYXRpY2FsbHkuXG4gICAgICogKi9cbiAgICByZW5kZXJDb250ZW50KCk6IGFueTtcbn1cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIE5iUG9zaXRpb25lZENvbnRhaW5lciB7XG4gICAgcG9zaXRpb246IE5iUG9zaXRpb247XG4gICAgcmVhZG9ubHkgdG9wOiBib29sZWFuO1xuICAgIHJlYWRvbmx5IHRvcFN0YXJ0OiBib29sZWFuO1xuICAgIHJlYWRvbmx5IHRvcEVuZDogYm9vbGVhbjtcbiAgICByZWFkb25seSByaWdodDogYm9vbGVhbjtcbiAgICByZWFkb25seSBlbmRUb3A6IGJvb2xlYW47XG4gICAgcmVhZG9ubHkgZW5kQm90dG9tOiBib29sZWFuO1xuICAgIHJlYWRvbmx5IGJvdHRvbTogYm9vbGVhbjtcbiAgICByZWFkb25seSBib3R0b21TdGFydDogYm9vbGVhbjtcbiAgICByZWFkb25seSBib3R0b21FbmQ6IGJvb2xlYW47XG4gICAgcmVhZG9ubHkgbGVmdDogYm9vbGVhbjtcbiAgICByZWFkb25seSBzdGFydFRvcDogYm9vbGVhbjtcbiAgICByZWFkb25seSBzdGFydEJvdHRvbTogYm9vbGVhbjtcbn1cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIE5iT3ZlcmxheUNvbnRhaW5lckNvbXBvbmVudCB7XG4gICAgcHJvdGVjdGVkIHZjcjogVmlld0NvbnRhaW5lclJlZjtcbiAgICBwcm90ZWN0ZWQgaW5qZWN0b3I6IEluamVjdG9yO1xuICAgIHByaXZhdGUgY2hhbmdlRGV0ZWN0b3JSZWY7XG4gICAgcG9ydGFsT3V0bGV0OiBOYlBvcnRhbE91dGxldERpcmVjdGl2ZTtcbiAgICBpc0F0dGFjaGVkOiBib29sZWFuO1xuICAgIGNvbnRlbnQ6IHN0cmluZztcbiAgICBjb25zdHJ1Y3Rvcih2Y3I6IFZpZXdDb250YWluZXJSZWYsIGluamVjdG9yOiBJbmplY3RvciwgY2hhbmdlRGV0ZWN0b3JSZWY6IENoYW5nZURldGVjdG9yUmVmKTtcbiAgICByZWFkb25seSBpc1N0cmluZ0NvbnRlbnQ6IGJvb2xlYW47XG4gICAgYXR0YWNoQ29tcG9uZW50UG9ydGFsPFQ+KHBvcnRhbDogTmJDb21wb25lbnRQb3J0YWw8VD4sIGNvbnRleHQ/OiBPYmplY3QpOiBDb21wb25lbnRSZWY8VD47XG4gICAgYXR0YWNoVGVtcGxhdGVQb3J0YWw8Qz4ocG9ydGFsOiBOYlRlbXBsYXRlUG9ydGFsPEM+KTogRW1iZWRkZWRWaWV3UmVmPEM+O1xuICAgIGF0dGFjaFN0cmluZ0NvbnRlbnQoY29udGVudDogc3RyaW5nKTogdm9pZDtcbiAgICBkZXRhY2goKTogdm9pZDtcbiAgICBwcm90ZWN0ZWQgY3JlYXRlQ2hpbGRJbmplY3RvcihjZnI6IENvbXBvbmVudEZhY3RvcnlSZXNvbHZlcik6IE5iUG9ydGFsSW5qZWN0b3I7XG59XG4iXX0=