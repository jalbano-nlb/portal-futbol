/**
 * @license
 * Copyright Akveo. All Rights Reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 */
import { ChangeDetectorRef, OnInit, EventEmitter, OnDestroy } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
import { NbLayoutDirectionService } from '../../services/direction.service';
import { NbComponentStatus } from '../component-status';
/**
 * Toggle is a control representing `on` and `off` states.
 *
 * @stacked-example(Showcase, toggle/toggle-showcase.component)
 *
 * ### Installation
 *
 * Import `NbToggleComponent` to your feature module.
 * ```ts
 * @NgModule({
 *   imports: [
 *     // ...
 *     NbToggleModule,
 *   ],
 * })
 * export class PageModule { }
 * ```
 * ### Usage
 *
 * Toggle may have one of the following statuses: `basic`, `primary`, `success`, `warning`, `danger`, `info`, `control`
 *
 * @stacked-example(Toggle status, toggle/toggle-status.component)
 *
 * Toggle can be disabled via `disabled` input.
 *
 * @stacked-example(Disabled Toggles, toggle/toggle-disabled.component)
 *
 * Toggle may have a label with following positions: `left`, `right`, `start`, `end` (default)
 *
 * @stacked-example(Toggles With Labels, toggle/toggle-label-position.component.ts)
 *
 * You can set control state via `checked` binding:
 *
 * ```html
 * <nb-toggle [(checked)]="checked"></nb-toggle>
 * ```
 *
 * Or it could be set via reactive forms or ngModel bindings:
 *
 * @stacked-example(Toggle form binding, toggle/toggle-form.component)
 *
 * @styles
 *
 * toggle-height:
 * toggle-width:
 * toggle-border-width:
 * toggle-border-radius:
 * toggle-outline-width:
 * toggle-outline-color:
 * toggle-switcher-size:
 * toggle-text-font-family:
 * toggle-text-font-size:
 * toggle-text-font-weight:
 * toggle-text-line-height:
 * toggle-cursor:
 * toggle-disabled-cursor:
 * toggle-basic-text-color:
 * toggle-basic-background-color:
 * toggle-basic-border-color:
 * toggle-basic-checked-background-color:
 * toggle-basic-checked-border-color:
 * toggle-basic-checked-switcher-background-color:
 * toggle-basic-checked-switcher-checkmark-color:
 * toggle-basic-focus-background-color:
 * toggle-basic-focus-border-color:
 * toggle-basic-focus-checked-background-color:
 * toggle-basic-focus-checked-border-color:
 * toggle-basic-hover-background-color:
 * toggle-basic-hover-border-color:
 * toggle-basic-hover-checked-background-color:
 * toggle-basic-hover-checked-border-color:
 * toggle-basic-active-background-color:
 * toggle-basic-active-border-color:
 * toggle-basic-active-checked-background-color:
 * toggle-basic-active-checked-border-color:
 * toggle-basic-disabled-background-color:
 * toggle-basic-disabled-border-color:
 * toggle-basic-disabled-switcher-background-color:
 * toggle-basic-disabled-checked-switcher-checkmark-color:
 * toggle-basic-disabled-text-color:
 * toggle-primary-text-color:
 * toggle-primary-background-color:
 * toggle-primary-border-color:
 * toggle-primary-checked-background-color:
 * toggle-primary-checked-border-color:
 * toggle-primary-checked-switcher-background-color:
 * toggle-primary-checked-switcher-checkmark-color:
 * toggle-primary-focus-background-color:
 * toggle-primary-focus-border-color:
 * toggle-primary-focus-checked-background-color:
 * toggle-primary-focus-checked-border-color:
 * toggle-primary-hover-background-color:
 * toggle-primary-hover-border-color:
 * toggle-primary-hover-checked-background-color:
 * toggle-primary-hover-checked-border-color:
 * toggle-primary-active-background-color:
 * toggle-primary-active-border-color:
 * toggle-primary-active-checked-background-color:
 * toggle-primary-active-checked-border-color:
 * toggle-primary-disabled-background-color:
 * toggle-primary-disabled-border-color:
 * toggle-primary-disabled-switcher-background-color:
 * toggle-primary-disabled-checked-switcher-checkmark-color:
 * toggle-primary-disabled-text-color:
 * toggle-success-text-color:
 * toggle-success-background-color:
 * toggle-success-border-color:
 * toggle-success-checked-background-color:
 * toggle-success-checked-border-color:
 * toggle-success-checked-switcher-background-color:
 * toggle-success-checked-switcher-checkmark-color:
 * toggle-success-focus-background-color:
 * toggle-success-focus-border-color:
 * toggle-success-focus-checked-background-color:
 * toggle-success-focus-checked-border-color:
 * toggle-success-hover-background-color:
 * toggle-success-hover-border-color:
 * toggle-success-hover-checked-background-color:
 * toggle-success-hover-checked-border-color:
 * toggle-success-active-background-color:
 * toggle-success-active-border-color:
 * toggle-success-active-checked-background-color:
 * toggle-success-active-checked-border-color:
 * toggle-success-disabled-background-color:
 * toggle-success-disabled-border-color:
 * toggle-success-disabled-switcher-background-color:
 * toggle-success-disabled-checked-switcher-checkmark-color:
 * toggle-success-disabled-text-color:
 * toggle-info-text-color:
 * toggle-info-background-color:
 * toggle-info-border-color:
 * toggle-info-checked-background-color:
 * toggle-info-checked-border-color:
 * toggle-info-checked-switcher-background-color:
 * toggle-info-checked-switcher-checkmark-color:
 * toggle-info-focus-background-color:
 * toggle-info-focus-border-color:
 * toggle-info-focus-checked-background-color:
 * toggle-info-focus-checked-border-color:
 * toggle-info-hover-background-color:
 * toggle-info-hover-border-color:
 * toggle-info-hover-checked-background-color:
 * toggle-info-hover-checked-border-color:
 * toggle-info-active-background-color:
 * toggle-info-active-border-color:
 * toggle-info-active-checked-background-color:
 * toggle-info-active-checked-border-color:
 * toggle-info-disabled-background-color:
 * toggle-info-disabled-border-color:
 * toggle-info-disabled-switcher-background-color:
 * toggle-info-disabled-checked-switcher-checkmark-color:
 * toggle-info-disabled-text-color:
 * toggle-warning-text-color:
 * toggle-warning-background-color:
 * toggle-warning-border-color:
 * toggle-warning-checked-background-color:
 * toggle-warning-checked-border-color:
 * toggle-warning-checked-switcher-background-color:
 * toggle-warning-checked-switcher-checkmark-color:
 * toggle-warning-focus-background-color:
 * toggle-warning-focus-border-color:
 * toggle-warning-focus-checked-background-color:
 * toggle-warning-focus-checked-border-color:
 * toggle-warning-hover-background-color:
 * toggle-warning-hover-border-color:
 * toggle-warning-hover-checked-background-color:
 * toggle-warning-hover-checked-border-color:
 * toggle-warning-active-background-color:
 * toggle-warning-active-border-color:
 * toggle-warning-active-checked-background-color:
 * toggle-warning-active-checked-border-color:
 * toggle-warning-disabled-background-color:
 * toggle-warning-disabled-border-color:
 * toggle-warning-disabled-switcher-background-color:
 * toggle-warning-disabled-checked-switcher-checkmark-color:
 * toggle-warning-disabled-text-color:
 * toggle-danger-text-color:
 * toggle-danger-background-color:
 * toggle-danger-border-color:
 * toggle-danger-checked-background-color:
 * toggle-danger-checked-border-color:
 * toggle-danger-checked-switcher-background-color:
 * toggle-danger-checked-switcher-checkmark-color:
 * toggle-danger-focus-background-color:
 * toggle-danger-focus-border-color:
 * toggle-danger-focus-checked-background-color:
 * toggle-danger-focus-checked-border-color:
 * toggle-danger-hover-background-color:
 * toggle-danger-hover-border-color:
 * toggle-danger-hover-checked-background-color:
 * toggle-danger-hover-checked-border-color:
 * toggle-danger-active-background-color:
 * toggle-danger-active-border-color:
 * toggle-danger-active-checked-background-color:
 * toggle-danger-active-checked-border-color:
 * toggle-danger-disabled-background-color:
 * toggle-danger-disabled-border-color:
 * toggle-danger-disabled-switcher-background-color:
 * toggle-danger-disabled-checked-switcher-checkmark-color:
 * toggle-danger-disabled-text-color:
 * toggle-control-text-color:
 * toggle-control-background-color:
 * toggle-control-border-color:
 * toggle-control-checked-background-color:
 * toggle-control-checked-border-color:
 * toggle-control-checked-switcher-background-color:
 * toggle-control-checked-switcher-checkmark-color:
 * toggle-control-focus-background-color:
 * toggle-control-focus-border-color:
 * toggle-control-focus-checked-background-color:
 * toggle-control-focus-checked-border-color:
 * toggle-control-hover-background-color:
 * toggle-control-hover-border-color:
 * toggle-control-hover-checked-background-color:
 * toggle-control-hover-checked-border-color:
 * toggle-control-active-background-color:
 * toggle-control-active-border-color:
 * toggle-control-active-checked-background-color:
 * toggle-control-active-checked-border-color:
 * toggle-control-disabled-background-color:
 * toggle-control-disabled-border-color:
 * toggle-control-disabled-switcher-background-color:
 * toggle-control-disabled-checked-switcher-checkmark-color:
 * toggle-control-disabled-text-color:
 */
import * as Éµngcc0 from '@angular/core';
export declare class NbToggleComponent implements OnInit, OnDestroy, ControlValueAccessor {
    private changeDetector;
    private layoutDirection;
    onChange: any;
    onTouched: any;
    private destroy$;
    /**
     * Toggle checked
     * @type {boolean}
     */
    checked: boolean;
    private _checked;
    /**
     * Controls input disabled state
     */
    disabled: boolean;
    private _disabled;
    /**
     * Toggle status.
     * Possible values are: `basic`, `primary`, `success`, `warning`, `danger`, `info`, `control`.
     */
    status: NbComponentStatus;
    _status: NbComponentStatus;
    /**
     * Toggle label position.
     * Possible values are: `left`, `right`, `start`, `end` (default)
     */
    labelPosition: 'left' | 'right' | 'start' | 'end';
    /**
     * Output when checked state is changed by a user
     * @type EventEmitter<boolean>
     */
    checkedChange: EventEmitter<boolean>;
    readonly primary: boolean;
    readonly success: boolean;
    readonly warning: boolean;
    readonly danger: boolean;
    readonly info: boolean;
    readonly basic: boolean;
    readonly control: boolean;
    readonly labelLeft: boolean;
    readonly labelRight: boolean;
    readonly labelStart: boolean;
    readonly labelEnd: boolean;
    constructor(changeDetector: ChangeDetectorRef, layoutDirection: NbLayoutDirectionService);
    ngOnInit(): void;
    ngOnDestroy(): void;
    checkState(): string;
    registerOnChange(fn: any): void;
    registerOnTouched(fn: any): void;
    writeValue(val: any): void;
    setDisabledState(val: boolean): void;
    updateValue(event: Event): void;
    onInputClick(event: Event): void;
    static Éµfac: Éµngcc0.ÉµÉµFactoryDef<NbToggleComponent>;
    static Éµcmp: Éµngcc0.ÉµÉµComponentDefWithMeta<NbToggleComponent, "nb-toggle", never, {
    "labelPosition": "labelPosition";
    "checked": "checked";
    "disabled": "disabled";
    "status": "status";
}, {
    "checkedChange": "checkedChange";
}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9nZ2xlLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJ0b2dnbGUuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUEwT0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQXNEQSIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCBBa3Zlby4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS4gU2VlIExpY2Vuc2UudHh0IGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24uXG4gKi9cbmltcG9ydCB7IENoYW5nZURldGVjdG9yUmVmLCBPbkluaXQsIEV2ZW50RW1pdHRlciwgT25EZXN0cm95IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb250cm9sVmFsdWVBY2Nlc3NvciB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbmltcG9ydCB7IE5iTGF5b3V0RGlyZWN0aW9uU2VydmljZSB9IGZyb20gJy4uLy4uL3NlcnZpY2VzL2RpcmVjdGlvbi5zZXJ2aWNlJztcbmltcG9ydCB7IE5iQ29tcG9uZW50U3RhdHVzIH0gZnJvbSAnLi4vY29tcG9uZW50LXN0YXR1cyc7XG4vKipcbiAqIFRvZ2dsZSBpcyBhIGNvbnRyb2wgcmVwcmVzZW50aW5nIGBvbmAgYW5kIGBvZmZgIHN0YXRlcy5cbiAqXG4gKiBAc3RhY2tlZC1leGFtcGxlKFNob3djYXNlLCB0b2dnbGUvdG9nZ2xlLXNob3djYXNlLmNvbXBvbmVudClcbiAqXG4gKiAjIyMgSW5zdGFsbGF0aW9uXG4gKlxuICogSW1wb3J0IGBOYlRvZ2dsZUNvbXBvbmVudGAgdG8geW91ciBmZWF0dXJlIG1vZHVsZS5cbiAqIGBgYHRzXG4gKiBATmdNb2R1bGUoe1xuICogICBpbXBvcnRzOiBbXG4gKiAgICAgLy8gLi4uXG4gKiAgICAgTmJUb2dnbGVNb2R1bGUsXG4gKiAgIF0sXG4gKiB9KVxuICogZXhwb3J0IGNsYXNzIFBhZ2VNb2R1bGUgeyB9XG4gKiBgYGBcbiAqICMjIyBVc2FnZVxuICpcbiAqIFRvZ2dsZSBtYXkgaGF2ZSBvbmUgb2YgdGhlIGZvbGxvd2luZyBzdGF0dXNlczogYGJhc2ljYCwgYHByaW1hcnlgLCBgc3VjY2Vzc2AsIGB3YXJuaW5nYCwgYGRhbmdlcmAsIGBpbmZvYCwgYGNvbnRyb2xgXG4gKlxuICogQHN0YWNrZWQtZXhhbXBsZShUb2dnbGUgc3RhdHVzLCB0b2dnbGUvdG9nZ2xlLXN0YXR1cy5jb21wb25lbnQpXG4gKlxuICogVG9nZ2xlIGNhbiBiZSBkaXNhYmxlZCB2aWEgYGRpc2FibGVkYCBpbnB1dC5cbiAqXG4gKiBAc3RhY2tlZC1leGFtcGxlKERpc2FibGVkIFRvZ2dsZXMsIHRvZ2dsZS90b2dnbGUtZGlzYWJsZWQuY29tcG9uZW50KVxuICpcbiAqIFRvZ2dsZSBtYXkgaGF2ZSBhIGxhYmVsIHdpdGggZm9sbG93aW5nIHBvc2l0aW9uczogYGxlZnRgLCBgcmlnaHRgLCBgc3RhcnRgLCBgZW5kYCAoZGVmYXVsdClcbiAqXG4gKiBAc3RhY2tlZC1leGFtcGxlKFRvZ2dsZXMgV2l0aCBMYWJlbHMsIHRvZ2dsZS90b2dnbGUtbGFiZWwtcG9zaXRpb24uY29tcG9uZW50LnRzKVxuICpcbiAqIFlvdSBjYW4gc2V0IGNvbnRyb2wgc3RhdGUgdmlhIGBjaGVja2VkYCBiaW5kaW5nOlxuICpcbiAqIGBgYGh0bWxcbiAqIDxuYi10b2dnbGUgWyhjaGVja2VkKV09XCJjaGVja2VkXCI+PC9uYi10b2dnbGU+XG4gKiBgYGBcbiAqXG4gKiBPciBpdCBjb3VsZCBiZSBzZXQgdmlhIHJlYWN0aXZlIGZvcm1zIG9yIG5nTW9kZWwgYmluZGluZ3M6XG4gKlxuICogQHN0YWNrZWQtZXhhbXBsZShUb2dnbGUgZm9ybSBiaW5kaW5nLCB0b2dnbGUvdG9nZ2xlLWZvcm0uY29tcG9uZW50KVxuICpcbiAqIEBzdHlsZXNcbiAqXG4gKiB0b2dnbGUtaGVpZ2h0OlxuICogdG9nZ2xlLXdpZHRoOlxuICogdG9nZ2xlLWJvcmRlci13aWR0aDpcbiAqIHRvZ2dsZS1ib3JkZXItcmFkaXVzOlxuICogdG9nZ2xlLW91dGxpbmUtd2lkdGg6XG4gKiB0b2dnbGUtb3V0bGluZS1jb2xvcjpcbiAqIHRvZ2dsZS1zd2l0Y2hlci1zaXplOlxuICogdG9nZ2xlLXRleHQtZm9udC1mYW1pbHk6XG4gKiB0b2dnbGUtdGV4dC1mb250LXNpemU6XG4gKiB0b2dnbGUtdGV4dC1mb250LXdlaWdodDpcbiAqIHRvZ2dsZS10ZXh0LWxpbmUtaGVpZ2h0OlxuICogdG9nZ2xlLWN1cnNvcjpcbiAqIHRvZ2dsZS1kaXNhYmxlZC1jdXJzb3I6XG4gKiB0b2dnbGUtYmFzaWMtdGV4dC1jb2xvcjpcbiAqIHRvZ2dsZS1iYXNpYy1iYWNrZ3JvdW5kLWNvbG9yOlxuICogdG9nZ2xlLWJhc2ljLWJvcmRlci1jb2xvcjpcbiAqIHRvZ2dsZS1iYXNpYy1jaGVja2VkLWJhY2tncm91bmQtY29sb3I6XG4gKiB0b2dnbGUtYmFzaWMtY2hlY2tlZC1ib3JkZXItY29sb3I6XG4gKiB0b2dnbGUtYmFzaWMtY2hlY2tlZC1zd2l0Y2hlci1iYWNrZ3JvdW5kLWNvbG9yOlxuICogdG9nZ2xlLWJhc2ljLWNoZWNrZWQtc3dpdGNoZXItY2hlY2ttYXJrLWNvbG9yOlxuICogdG9nZ2xlLWJhc2ljLWZvY3VzLWJhY2tncm91bmQtY29sb3I6XG4gKiB0b2dnbGUtYmFzaWMtZm9jdXMtYm9yZGVyLWNvbG9yOlxuICogdG9nZ2xlLWJhc2ljLWZvY3VzLWNoZWNrZWQtYmFja2dyb3VuZC1jb2xvcjpcbiAqIHRvZ2dsZS1iYXNpYy1mb2N1cy1jaGVja2VkLWJvcmRlci1jb2xvcjpcbiAqIHRvZ2dsZS1iYXNpYy1ob3Zlci1iYWNrZ3JvdW5kLWNvbG9yOlxuICogdG9nZ2xlLWJhc2ljLWhvdmVyLWJvcmRlci1jb2xvcjpcbiAqIHRvZ2dsZS1iYXNpYy1ob3Zlci1jaGVja2VkLWJhY2tncm91bmQtY29sb3I6XG4gKiB0b2dnbGUtYmFzaWMtaG92ZXItY2hlY2tlZC1ib3JkZXItY29sb3I6XG4gKiB0b2dnbGUtYmFzaWMtYWN0aXZlLWJhY2tncm91bmQtY29sb3I6XG4gKiB0b2dnbGUtYmFzaWMtYWN0aXZlLWJvcmRlci1jb2xvcjpcbiAqIHRvZ2dsZS1iYXNpYy1hY3RpdmUtY2hlY2tlZC1iYWNrZ3JvdW5kLWNvbG9yOlxuICogdG9nZ2xlLWJhc2ljLWFjdGl2ZS1jaGVja2VkLWJvcmRlci1jb2xvcjpcbiAqIHRvZ2dsZS1iYXNpYy1kaXNhYmxlZC1iYWNrZ3JvdW5kLWNvbG9yOlxuICogdG9nZ2xlLWJhc2ljLWRpc2FibGVkLWJvcmRlci1jb2xvcjpcbiAqIHRvZ2dsZS1iYXNpYy1kaXNhYmxlZC1zd2l0Y2hlci1iYWNrZ3JvdW5kLWNvbG9yOlxuICogdG9nZ2xlLWJhc2ljLWRpc2FibGVkLWNoZWNrZWQtc3dpdGNoZXItY2hlY2ttYXJrLWNvbG9yOlxuICogdG9nZ2xlLWJhc2ljLWRpc2FibGVkLXRleHQtY29sb3I6XG4gKiB0b2dnbGUtcHJpbWFyeS10ZXh0LWNvbG9yOlxuICogdG9nZ2xlLXByaW1hcnktYmFja2dyb3VuZC1jb2xvcjpcbiAqIHRvZ2dsZS1wcmltYXJ5LWJvcmRlci1jb2xvcjpcbiAqIHRvZ2dsZS1wcmltYXJ5LWNoZWNrZWQtYmFja2dyb3VuZC1jb2xvcjpcbiAqIHRvZ2dsZS1wcmltYXJ5LWNoZWNrZWQtYm9yZGVyLWNvbG9yOlxuICogdG9nZ2xlLXByaW1hcnktY2hlY2tlZC1zd2l0Y2hlci1iYWNrZ3JvdW5kLWNvbG9yOlxuICogdG9nZ2xlLXByaW1hcnktY2hlY2tlZC1zd2l0Y2hlci1jaGVja21hcmstY29sb3I6XG4gKiB0b2dnbGUtcHJpbWFyeS1mb2N1cy1iYWNrZ3JvdW5kLWNvbG9yOlxuICogdG9nZ2xlLXByaW1hcnktZm9jdXMtYm9yZGVyLWNvbG9yOlxuICogdG9nZ2xlLXByaW1hcnktZm9jdXMtY2hlY2tlZC1iYWNrZ3JvdW5kLWNvbG9yOlxuICogdG9nZ2xlLXByaW1hcnktZm9jdXMtY2hlY2tlZC1ib3JkZXItY29sb3I6XG4gKiB0b2dnbGUtcHJpbWFyeS1ob3Zlci1iYWNrZ3JvdW5kLWNvbG9yOlxuICogdG9nZ2xlLXByaW1hcnktaG92ZXItYm9yZGVyLWNvbG9yOlxuICogdG9nZ2xlLXByaW1hcnktaG92ZXItY2hlY2tlZC1iYWNrZ3JvdW5kLWNvbG9yOlxuICogdG9nZ2xlLXByaW1hcnktaG92ZXItY2hlY2tlZC1ib3JkZXItY29sb3I6XG4gKiB0b2dnbGUtcHJpbWFyeS1hY3RpdmUtYmFja2dyb3VuZC1jb2xvcjpcbiAqIHRvZ2dsZS1wcmltYXJ5LWFjdGl2ZS1ib3JkZXItY29sb3I6XG4gKiB0b2dnbGUtcHJpbWFyeS1hY3RpdmUtY2hlY2tlZC1iYWNrZ3JvdW5kLWNvbG9yOlxuICogdG9nZ2xlLXByaW1hcnktYWN0aXZlLWNoZWNrZWQtYm9yZGVyLWNvbG9yOlxuICogdG9nZ2xlLXByaW1hcnktZGlzYWJsZWQtYmFja2dyb3VuZC1jb2xvcjpcbiAqIHRvZ2dsZS1wcmltYXJ5LWRpc2FibGVkLWJvcmRlci1jb2xvcjpcbiAqIHRvZ2dsZS1wcmltYXJ5LWRpc2FibGVkLXN3aXRjaGVyLWJhY2tncm91bmQtY29sb3I6XG4gKiB0b2dnbGUtcHJpbWFyeS1kaXNhYmxlZC1jaGVja2VkLXN3aXRjaGVyLWNoZWNrbWFyay1jb2xvcjpcbiAqIHRvZ2dsZS1wcmltYXJ5LWRpc2FibGVkLXRleHQtY29sb3I6XG4gKiB0b2dnbGUtc3VjY2Vzcy10ZXh0LWNvbG9yOlxuICogdG9nZ2xlLXN1Y2Nlc3MtYmFja2dyb3VuZC1jb2xvcjpcbiAqIHRvZ2dsZS1zdWNjZXNzLWJvcmRlci1jb2xvcjpcbiAqIHRvZ2dsZS1zdWNjZXNzLWNoZWNrZWQtYmFja2dyb3VuZC1jb2xvcjpcbiAqIHRvZ2dsZS1zdWNjZXNzLWNoZWNrZWQtYm9yZGVyLWNvbG9yOlxuICogdG9nZ2xlLXN1Y2Nlc3MtY2hlY2tlZC1zd2l0Y2hlci1iYWNrZ3JvdW5kLWNvbG9yOlxuICogdG9nZ2xlLXN1Y2Nlc3MtY2hlY2tlZC1zd2l0Y2hlci1jaGVja21hcmstY29sb3I6XG4gKiB0b2dnbGUtc3VjY2Vzcy1mb2N1cy1iYWNrZ3JvdW5kLWNvbG9yOlxuICogdG9nZ2xlLXN1Y2Nlc3MtZm9jdXMtYm9yZGVyLWNvbG9yOlxuICogdG9nZ2xlLXN1Y2Nlc3MtZm9jdXMtY2hlY2tlZC1iYWNrZ3JvdW5kLWNvbG9yOlxuICogdG9nZ2xlLXN1Y2Nlc3MtZm9jdXMtY2hlY2tlZC1ib3JkZXItY29sb3I6XG4gKiB0b2dnbGUtc3VjY2Vzcy1ob3Zlci1iYWNrZ3JvdW5kLWNvbG9yOlxuICogdG9nZ2xlLXN1Y2Nlc3MtaG92ZXItYm9yZGVyLWNvbG9yOlxuICogdG9nZ2xlLXN1Y2Nlc3MtaG92ZXItY2hlY2tlZC1iYWNrZ3JvdW5kLWNvbG9yOlxuICogdG9nZ2xlLXN1Y2Nlc3MtaG92ZXItY2hlY2tlZC1ib3JkZXItY29sb3I6XG4gKiB0b2dnbGUtc3VjY2Vzcy1hY3RpdmUtYmFja2dyb3VuZC1jb2xvcjpcbiAqIHRvZ2dsZS1zdWNjZXNzLWFjdGl2ZS1ib3JkZXItY29sb3I6XG4gKiB0b2dnbGUtc3VjY2Vzcy1hY3RpdmUtY2hlY2tlZC1iYWNrZ3JvdW5kLWNvbG9yOlxuICogdG9nZ2xlLXN1Y2Nlc3MtYWN0aXZlLWNoZWNrZWQtYm9yZGVyLWNvbG9yOlxuICogdG9nZ2xlLXN1Y2Nlc3MtZGlzYWJsZWQtYmFja2dyb3VuZC1jb2xvcjpcbiAqIHRvZ2dsZS1zdWNjZXNzLWRpc2FibGVkLWJvcmRlci1jb2xvcjpcbiAqIHRvZ2dsZS1zdWNjZXNzLWRpc2FibGVkLXN3aXRjaGVyLWJhY2tncm91bmQtY29sb3I6XG4gKiB0b2dnbGUtc3VjY2Vzcy1kaXNhYmxlZC1jaGVja2VkLXN3aXRjaGVyLWNoZWNrbWFyay1jb2xvcjpcbiAqIHRvZ2dsZS1zdWNjZXNzLWRpc2FibGVkLXRleHQtY29sb3I6XG4gKiB0b2dnbGUtaW5mby10ZXh0LWNvbG9yOlxuICogdG9nZ2xlLWluZm8tYmFja2dyb3VuZC1jb2xvcjpcbiAqIHRvZ2dsZS1pbmZvLWJvcmRlci1jb2xvcjpcbiAqIHRvZ2dsZS1pbmZvLWNoZWNrZWQtYmFja2dyb3VuZC1jb2xvcjpcbiAqIHRvZ2dsZS1pbmZvLWNoZWNrZWQtYm9yZGVyLWNvbG9yOlxuICogdG9nZ2xlLWluZm8tY2hlY2tlZC1zd2l0Y2hlci1iYWNrZ3JvdW5kLWNvbG9yOlxuICogdG9nZ2xlLWluZm8tY2hlY2tlZC1zd2l0Y2hlci1jaGVja21hcmstY29sb3I6XG4gKiB0b2dnbGUtaW5mby1mb2N1cy1iYWNrZ3JvdW5kLWNvbG9yOlxuICogdG9nZ2xlLWluZm8tZm9jdXMtYm9yZGVyLWNvbG9yOlxuICogdG9nZ2xlLWluZm8tZm9jdXMtY2hlY2tlZC1iYWNrZ3JvdW5kLWNvbG9yOlxuICogdG9nZ2xlLWluZm8tZm9jdXMtY2hlY2tlZC1ib3JkZXItY29sb3I6XG4gKiB0b2dnbGUtaW5mby1ob3Zlci1iYWNrZ3JvdW5kLWNvbG9yOlxuICogdG9nZ2xlLWluZm8taG92ZXItYm9yZGVyLWNvbG9yOlxuICogdG9nZ2xlLWluZm8taG92ZXItY2hlY2tlZC1iYWNrZ3JvdW5kLWNvbG9yOlxuICogdG9nZ2xlLWluZm8taG92ZXItY2hlY2tlZC1ib3JkZXItY29sb3I6XG4gKiB0b2dnbGUtaW5mby1hY3RpdmUtYmFja2dyb3VuZC1jb2xvcjpcbiAqIHRvZ2dsZS1pbmZvLWFjdGl2ZS1ib3JkZXItY29sb3I6XG4gKiB0b2dnbGUtaW5mby1hY3RpdmUtY2hlY2tlZC1iYWNrZ3JvdW5kLWNvbG9yOlxuICogdG9nZ2xlLWluZm8tYWN0aXZlLWNoZWNrZWQtYm9yZGVyLWNvbG9yOlxuICogdG9nZ2xlLWluZm8tZGlzYWJsZWQtYmFja2dyb3VuZC1jb2xvcjpcbiAqIHRvZ2dsZS1pbmZvLWRpc2FibGVkLWJvcmRlci1jb2xvcjpcbiAqIHRvZ2dsZS1pbmZvLWRpc2FibGVkLXN3aXRjaGVyLWJhY2tncm91bmQtY29sb3I6XG4gKiB0b2dnbGUtaW5mby1kaXNhYmxlZC1jaGVja2VkLXN3aXRjaGVyLWNoZWNrbWFyay1jb2xvcjpcbiAqIHRvZ2dsZS1pbmZvLWRpc2FibGVkLXRleHQtY29sb3I6XG4gKiB0b2dnbGUtd2FybmluZy10ZXh0LWNvbG9yOlxuICogdG9nZ2xlLXdhcm5pbmctYmFja2dyb3VuZC1jb2xvcjpcbiAqIHRvZ2dsZS13YXJuaW5nLWJvcmRlci1jb2xvcjpcbiAqIHRvZ2dsZS13YXJuaW5nLWNoZWNrZWQtYmFja2dyb3VuZC1jb2xvcjpcbiAqIHRvZ2dsZS13YXJuaW5nLWNoZWNrZWQtYm9yZGVyLWNvbG9yOlxuICogdG9nZ2xlLXdhcm5pbmctY2hlY2tlZC1zd2l0Y2hlci1iYWNrZ3JvdW5kLWNvbG9yOlxuICogdG9nZ2xlLXdhcm5pbmctY2hlY2tlZC1zd2l0Y2hlci1jaGVja21hcmstY29sb3I6XG4gKiB0b2dnbGUtd2FybmluZy1mb2N1cy1iYWNrZ3JvdW5kLWNvbG9yOlxuICogdG9nZ2xlLXdhcm5pbmctZm9jdXMtYm9yZGVyLWNvbG9yOlxuICogdG9nZ2xlLXdhcm5pbmctZm9jdXMtY2hlY2tlZC1iYWNrZ3JvdW5kLWNvbG9yOlxuICogdG9nZ2xlLXdhcm5pbmctZm9jdXMtY2hlY2tlZC1ib3JkZXItY29sb3I6XG4gKiB0b2dnbGUtd2FybmluZy1ob3Zlci1iYWNrZ3JvdW5kLWNvbG9yOlxuICogdG9nZ2xlLXdhcm5pbmctaG92ZXItYm9yZGVyLWNvbG9yOlxuICogdG9nZ2xlLXdhcm5pbmctaG92ZXItY2hlY2tlZC1iYWNrZ3JvdW5kLWNvbG9yOlxuICogdG9nZ2xlLXdhcm5pbmctaG92ZXItY2hlY2tlZC1ib3JkZXItY29sb3I6XG4gKiB0b2dnbGUtd2FybmluZy1hY3RpdmUtYmFja2dyb3VuZC1jb2xvcjpcbiAqIHRvZ2dsZS13YXJuaW5nLWFjdGl2ZS1ib3JkZXItY29sb3I6XG4gKiB0b2dnbGUtd2FybmluZy1hY3RpdmUtY2hlY2tlZC1iYWNrZ3JvdW5kLWNvbG9yOlxuICogdG9nZ2xlLXdhcm5pbmctYWN0aXZlLWNoZWNrZWQtYm9yZGVyLWNvbG9yOlxuICogdG9nZ2xlLXdhcm5pbmctZGlzYWJsZWQtYmFja2dyb3VuZC1jb2xvcjpcbiAqIHRvZ2dsZS13YXJuaW5nLWRpc2FibGVkLWJvcmRlci1jb2xvcjpcbiAqIHRvZ2dsZS13YXJuaW5nLWRpc2FibGVkLXN3aXRjaGVyLWJhY2tncm91bmQtY29sb3I6XG4gKiB0b2dnbGUtd2FybmluZy1kaXNhYmxlZC1jaGVja2VkLXN3aXRjaGVyLWNoZWNrbWFyay1jb2xvcjpcbiAqIHRvZ2dsZS13YXJuaW5nLWRpc2FibGVkLXRleHQtY29sb3I6XG4gKiB0b2dnbGUtZGFuZ2VyLXRleHQtY29sb3I6XG4gKiB0b2dnbGUtZGFuZ2VyLWJhY2tncm91bmQtY29sb3I6XG4gKiB0b2dnbGUtZGFuZ2VyLWJvcmRlci1jb2xvcjpcbiAqIHRvZ2dsZS1kYW5nZXItY2hlY2tlZC1iYWNrZ3JvdW5kLWNvbG9yOlxuICogdG9nZ2xlLWRhbmdlci1jaGVja2VkLWJvcmRlci1jb2xvcjpcbiAqIHRvZ2dsZS1kYW5nZXItY2hlY2tlZC1zd2l0Y2hlci1iYWNrZ3JvdW5kLWNvbG9yOlxuICogdG9nZ2xlLWRhbmdlci1jaGVja2VkLXN3aXRjaGVyLWNoZWNrbWFyay1jb2xvcjpcbiAqIHRvZ2dsZS1kYW5nZXItZm9jdXMtYmFja2dyb3VuZC1jb2xvcjpcbiAqIHRvZ2dsZS1kYW5nZXItZm9jdXMtYm9yZGVyLWNvbG9yOlxuICogdG9nZ2xlLWRhbmdlci1mb2N1cy1jaGVja2VkLWJhY2tncm91bmQtY29sb3I6XG4gKiB0b2dnbGUtZGFuZ2VyLWZvY3VzLWNoZWNrZWQtYm9yZGVyLWNvbG9yOlxuICogdG9nZ2xlLWRhbmdlci1ob3Zlci1iYWNrZ3JvdW5kLWNvbG9yOlxuICogdG9nZ2xlLWRhbmdlci1ob3Zlci1ib3JkZXItY29sb3I6XG4gKiB0b2dnbGUtZGFuZ2VyLWhvdmVyLWNoZWNrZWQtYmFja2dyb3VuZC1jb2xvcjpcbiAqIHRvZ2dsZS1kYW5nZXItaG92ZXItY2hlY2tlZC1ib3JkZXItY29sb3I6XG4gKiB0b2dnbGUtZGFuZ2VyLWFjdGl2ZS1iYWNrZ3JvdW5kLWNvbG9yOlxuICogdG9nZ2xlLWRhbmdlci1hY3RpdmUtYm9yZGVyLWNvbG9yOlxuICogdG9nZ2xlLWRhbmdlci1hY3RpdmUtY2hlY2tlZC1iYWNrZ3JvdW5kLWNvbG9yOlxuICogdG9nZ2xlLWRhbmdlci1hY3RpdmUtY2hlY2tlZC1ib3JkZXItY29sb3I6XG4gKiB0b2dnbGUtZGFuZ2VyLWRpc2FibGVkLWJhY2tncm91bmQtY29sb3I6XG4gKiB0b2dnbGUtZGFuZ2VyLWRpc2FibGVkLWJvcmRlci1jb2xvcjpcbiAqIHRvZ2dsZS1kYW5nZXItZGlzYWJsZWQtc3dpdGNoZXItYmFja2dyb3VuZC1jb2xvcjpcbiAqIHRvZ2dsZS1kYW5nZXItZGlzYWJsZWQtY2hlY2tlZC1zd2l0Y2hlci1jaGVja21hcmstY29sb3I6XG4gKiB0b2dnbGUtZGFuZ2VyLWRpc2FibGVkLXRleHQtY29sb3I6XG4gKiB0b2dnbGUtY29udHJvbC10ZXh0LWNvbG9yOlxuICogdG9nZ2xlLWNvbnRyb2wtYmFja2dyb3VuZC1jb2xvcjpcbiAqIHRvZ2dsZS1jb250cm9sLWJvcmRlci1jb2xvcjpcbiAqIHRvZ2dsZS1jb250cm9sLWNoZWNrZWQtYmFja2dyb3VuZC1jb2xvcjpcbiAqIHRvZ2dsZS1jb250cm9sLWNoZWNrZWQtYm9yZGVyLWNvbG9yOlxuICogdG9nZ2xlLWNvbnRyb2wtY2hlY2tlZC1zd2l0Y2hlci1iYWNrZ3JvdW5kLWNvbG9yOlxuICogdG9nZ2xlLWNvbnRyb2wtY2hlY2tlZC1zd2l0Y2hlci1jaGVja21hcmstY29sb3I6XG4gKiB0b2dnbGUtY29udHJvbC1mb2N1cy1iYWNrZ3JvdW5kLWNvbG9yOlxuICogdG9nZ2xlLWNvbnRyb2wtZm9jdXMtYm9yZGVyLWNvbG9yOlxuICogdG9nZ2xlLWNvbnRyb2wtZm9jdXMtY2hlY2tlZC1iYWNrZ3JvdW5kLWNvbG9yOlxuICogdG9nZ2xlLWNvbnRyb2wtZm9jdXMtY2hlY2tlZC1ib3JkZXItY29sb3I6XG4gKiB0b2dnbGUtY29udHJvbC1ob3Zlci1iYWNrZ3JvdW5kLWNvbG9yOlxuICogdG9nZ2xlLWNvbnRyb2wtaG92ZXItYm9yZGVyLWNvbG9yOlxuICogdG9nZ2xlLWNvbnRyb2wtaG92ZXItY2hlY2tlZC1iYWNrZ3JvdW5kLWNvbG9yOlxuICogdG9nZ2xlLWNvbnRyb2wtaG92ZXItY2hlY2tlZC1ib3JkZXItY29sb3I6XG4gKiB0b2dnbGUtY29udHJvbC1hY3RpdmUtYmFja2dyb3VuZC1jb2xvcjpcbiAqIHRvZ2dsZS1jb250cm9sLWFjdGl2ZS1ib3JkZXItY29sb3I6XG4gKiB0b2dnbGUtY29udHJvbC1hY3RpdmUtY2hlY2tlZC1iYWNrZ3JvdW5kLWNvbG9yOlxuICogdG9nZ2xlLWNvbnRyb2wtYWN0aXZlLWNoZWNrZWQtYm9yZGVyLWNvbG9yOlxuICogdG9nZ2xlLWNvbnRyb2wtZGlzYWJsZWQtYmFja2dyb3VuZC1jb2xvcjpcbiAqIHRvZ2dsZS1jb250cm9sLWRpc2FibGVkLWJvcmRlci1jb2xvcjpcbiAqIHRvZ2dsZS1jb250cm9sLWRpc2FibGVkLXN3aXRjaGVyLWJhY2tncm91bmQtY29sb3I6XG4gKiB0b2dnbGUtY29udHJvbC1kaXNhYmxlZC1jaGVja2VkLXN3aXRjaGVyLWNoZWNrbWFyay1jb2xvcjpcbiAqIHRvZ2dsZS1jb250cm9sLWRpc2FibGVkLXRleHQtY29sb3I6XG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIE5iVG9nZ2xlQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkRlc3Ryb3ksIENvbnRyb2xWYWx1ZUFjY2Vzc29yIHtcbiAgICBwcml2YXRlIGNoYW5nZURldGVjdG9yO1xuICAgIHByaXZhdGUgbGF5b3V0RGlyZWN0aW9uO1xuICAgIG9uQ2hhbmdlOiBhbnk7XG4gICAgb25Ub3VjaGVkOiBhbnk7XG4gICAgcHJpdmF0ZSBkZXN0cm95JDtcbiAgICAvKipcbiAgICAgKiBUb2dnbGUgY2hlY2tlZFxuICAgICAqIEB0eXBlIHtib29sZWFufVxuICAgICAqL1xuICAgIGNoZWNrZWQ6IGJvb2xlYW47XG4gICAgcHJpdmF0ZSBfY2hlY2tlZDtcbiAgICAvKipcbiAgICAgKiBDb250cm9scyBpbnB1dCBkaXNhYmxlZCBzdGF0ZVxuICAgICAqL1xuICAgIGRpc2FibGVkOiBib29sZWFuO1xuICAgIHByaXZhdGUgX2Rpc2FibGVkO1xuICAgIC8qKlxuICAgICAqIFRvZ2dsZSBzdGF0dXMuXG4gICAgICogUG9zc2libGUgdmFsdWVzIGFyZTogYGJhc2ljYCwgYHByaW1hcnlgLCBgc3VjY2Vzc2AsIGB3YXJuaW5nYCwgYGRhbmdlcmAsIGBpbmZvYCwgYGNvbnRyb2xgLlxuICAgICAqL1xuICAgIHN0YXR1czogTmJDb21wb25lbnRTdGF0dXM7XG4gICAgX3N0YXR1czogTmJDb21wb25lbnRTdGF0dXM7XG4gICAgLyoqXG4gICAgICogVG9nZ2xlIGxhYmVsIHBvc2l0aW9uLlxuICAgICAqIFBvc3NpYmxlIHZhbHVlcyBhcmU6IGBsZWZ0YCwgYHJpZ2h0YCwgYHN0YXJ0YCwgYGVuZGAgKGRlZmF1bHQpXG4gICAgICovXG4gICAgbGFiZWxQb3NpdGlvbjogJ2xlZnQnIHwgJ3JpZ2h0JyB8ICdzdGFydCcgfCAnZW5kJztcbiAgICAvKipcbiAgICAgKiBPdXRwdXQgd2hlbiBjaGVja2VkIHN0YXRlIGlzIGNoYW5nZWQgYnkgYSB1c2VyXG4gICAgICogQHR5cGUgRXZlbnRFbWl0dGVyPGJvb2xlYW4+XG4gICAgICovXG4gICAgY2hlY2tlZENoYW5nZTogRXZlbnRFbWl0dGVyPGJvb2xlYW4+O1xuICAgIHJlYWRvbmx5IHByaW1hcnk6IGJvb2xlYW47XG4gICAgcmVhZG9ubHkgc3VjY2VzczogYm9vbGVhbjtcbiAgICByZWFkb25seSB3YXJuaW5nOiBib29sZWFuO1xuICAgIHJlYWRvbmx5IGRhbmdlcjogYm9vbGVhbjtcbiAgICByZWFkb25seSBpbmZvOiBib29sZWFuO1xuICAgIHJlYWRvbmx5IGJhc2ljOiBib29sZWFuO1xuICAgIHJlYWRvbmx5IGNvbnRyb2w6IGJvb2xlYW47XG4gICAgcmVhZG9ubHkgbGFiZWxMZWZ0OiBib29sZWFuO1xuICAgIHJlYWRvbmx5IGxhYmVsUmlnaHQ6IGJvb2xlYW47XG4gICAgcmVhZG9ubHkgbGFiZWxTdGFydDogYm9vbGVhbjtcbiAgICByZWFkb25seSBsYWJlbEVuZDogYm9vbGVhbjtcbiAgICBjb25zdHJ1Y3RvcihjaGFuZ2VEZXRlY3RvcjogQ2hhbmdlRGV0ZWN0b3JSZWYsIGxheW91dERpcmVjdGlvbjogTmJMYXlvdXREaXJlY3Rpb25TZXJ2aWNlKTtcbiAgICBuZ09uSW5pdCgpOiB2b2lkO1xuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XG4gICAgY2hlY2tTdGF0ZSgpOiBzdHJpbmc7XG4gICAgcmVnaXN0ZXJPbkNoYW5nZShmbjogYW55KTogdm9pZDtcbiAgICByZWdpc3Rlck9uVG91Y2hlZChmbjogYW55KTogdm9pZDtcbiAgICB3cml0ZVZhbHVlKHZhbDogYW55KTogdm9pZDtcbiAgICBzZXREaXNhYmxlZFN0YXRlKHZhbDogYm9vbGVhbik6IHZvaWQ7XG4gICAgdXBkYXRlVmFsdWUoZXZlbnQ6IEV2ZW50KTogdm9pZDtcbiAgICBvbklucHV0Q2xpY2soZXZlbnQ6IEV2ZW50KTogdm9pZDtcbn1cbiJdfQ==