import { TemplateRef } from '@angular/core';
import { AbstractControl } from '@angular/forms';
import { NbStepperComponent } from './stepper.component';
/**
 * Component intended to be used within  the `<nb-stepper>` component.
 * Container for a step
 */
import * as ɵngcc0 from '@angular/core';
export declare class NbStepComponent {
    protected stepper: NbStepperComponent;
    /**
     * Step content
     *
     * @type {TemplateRef}
     */
    content: TemplateRef<any>;
    /**
     * Top level abstract control of the step
     *
     * @type {AbstractControl}
     */
    stepControl: AbstractControl;
    /**
     * Step label
     *
     * @type {string|TemplateRef<any>}
     */
    label: string | TemplateRef<any>;
    /**
     * Whether step will be displayed in wizard
     *
     * @type {boolean}
     */
    hidden: false;
    /**
     * Check that label is a TemplateRef.
     *
     * @return boolean
     * */
    readonly isLabelTemplate: boolean;
    /**
     * Whether step is marked as completed.
     *
     * @type {boolean}
     */
    completed: boolean;
    protected _completed: boolean;
    protected readonly isCompleted: boolean;
    interacted: boolean;
    constructor(stepper: any);
    /**
     * Mark step as selected
     * */
    select(): void;
    /**
     * Reset step and stepControl state
     * */
    reset(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NbStepComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NbStepComponent, "nb-step", never, {
    "completed": "completed";
    "stepControl": "stepControl";
    "label": "label";
    "hidden": "hidden";
}, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RlcC5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsic3RlcC5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7QUFPQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBa0RBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVGVtcGxhdGVSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEFic3RyYWN0Q29udHJvbCB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbmltcG9ydCB7IE5iU3RlcHBlckNvbXBvbmVudCB9IGZyb20gJy4vc3RlcHBlci5jb21wb25lbnQnO1xuLyoqXG4gKiBDb21wb25lbnQgaW50ZW5kZWQgdG8gYmUgdXNlZCB3aXRoaW4gIHRoZSBgPG5iLXN0ZXBwZXI+YCBjb21wb25lbnQuXG4gKiBDb250YWluZXIgZm9yIGEgc3RlcFxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBOYlN0ZXBDb21wb25lbnQge1xuICAgIHByb3RlY3RlZCBzdGVwcGVyOiBOYlN0ZXBwZXJDb21wb25lbnQ7XG4gICAgLyoqXG4gICAgICogU3RlcCBjb250ZW50XG4gICAgICpcbiAgICAgKiBAdHlwZSB7VGVtcGxhdGVSZWZ9XG4gICAgICovXG4gICAgY29udGVudDogVGVtcGxhdGVSZWY8YW55PjtcbiAgICAvKipcbiAgICAgKiBUb3AgbGV2ZWwgYWJzdHJhY3QgY29udHJvbCBvZiB0aGUgc3RlcFxuICAgICAqXG4gICAgICogQHR5cGUge0Fic3RyYWN0Q29udHJvbH1cbiAgICAgKi9cbiAgICBzdGVwQ29udHJvbDogQWJzdHJhY3RDb250cm9sO1xuICAgIC8qKlxuICAgICAqIFN0ZXAgbGFiZWxcbiAgICAgKlxuICAgICAqIEB0eXBlIHtzdHJpbmd8VGVtcGxhdGVSZWY8YW55Pn1cbiAgICAgKi9cbiAgICBsYWJlbDogc3RyaW5nIHwgVGVtcGxhdGVSZWY8YW55PjtcbiAgICAvKipcbiAgICAgKiBXaGV0aGVyIHN0ZXAgd2lsbCBiZSBkaXNwbGF5ZWQgaW4gd2l6YXJkXG4gICAgICpcbiAgICAgKiBAdHlwZSB7Ym9vbGVhbn1cbiAgICAgKi9cbiAgICBoaWRkZW46IGZhbHNlO1xuICAgIC8qKlxuICAgICAqIENoZWNrIHRoYXQgbGFiZWwgaXMgYSBUZW1wbGF0ZVJlZi5cbiAgICAgKlxuICAgICAqIEByZXR1cm4gYm9vbGVhblxuICAgICAqICovXG4gICAgcmVhZG9ubHkgaXNMYWJlbFRlbXBsYXRlOiBib29sZWFuO1xuICAgIC8qKlxuICAgICAqIFdoZXRoZXIgc3RlcCBpcyBtYXJrZWQgYXMgY29tcGxldGVkLlxuICAgICAqXG4gICAgICogQHR5cGUge2Jvb2xlYW59XG4gICAgICovXG4gICAgY29tcGxldGVkOiBib29sZWFuO1xuICAgIHByb3RlY3RlZCBfY29tcGxldGVkOiBib29sZWFuO1xuICAgIHByb3RlY3RlZCByZWFkb25seSBpc0NvbXBsZXRlZDogYm9vbGVhbjtcbiAgICBpbnRlcmFjdGVkOiBib29sZWFuO1xuICAgIGNvbnN0cnVjdG9yKHN0ZXBwZXI6IGFueSk7XG4gICAgLyoqXG4gICAgICogTWFyayBzdGVwIGFzIHNlbGVjdGVkXG4gICAgICogKi9cbiAgICBzZWxlY3QoKTogdm9pZDtcbiAgICAvKipcbiAgICAgKiBSZXNldCBzdGVwIGFuZCBzdGVwQ29udHJvbCBzdGF0ZVxuICAgICAqICovXG4gICAgcmVzZXQoKTogdm9pZDtcbn1cbiJdfQ==