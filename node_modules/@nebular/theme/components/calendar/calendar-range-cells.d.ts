import { EventEmitter } from '@angular/core';
import { NbCalendarCell } from '../calendar-kit/model';
import { NbDateService } from '../calendar-kit/services/date.service';
import { NbCalendarRange } from './calendar-range.component';
import * as ɵngcc0 from '@angular/core';
export declare class NbCalendarRangeDayCellComponent<D> implements NbCalendarCell<D, NbCalendarRange<D>> {
    protected dateService: NbDateService<D>;
    date: D;
    selectedValue: NbCalendarRange<D>;
    visibleDate: D;
    min: D;
    max: D;
    filter: (D: any) => boolean;
    select: EventEmitter<D>;
    constructor(dateService: NbDateService<D>);
    readonly inRange: boolean;
    readonly start: boolean;
    readonly end: boolean;
    readonly today: boolean;
    readonly boundingMonth: boolean;
    readonly selected: boolean;
    readonly empty: boolean;
    readonly disabled: boolean;
    readonly day: number;
    onClick(): void;
    private smallerThanMin;
    private greaterThanMax;
    private dontFitFilter;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NbCalendarRangeDayCellComponent<any>>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NbCalendarRangeDayCellComponent<any>, "nb-calendar-range-day-cell", never, {
    "date": "date";
    "selectedValue": "selectedValue";
    "visibleDate": "visibleDate";
    "min": "min";
    "max": "max";
    "filter": "filter";
}, {
    "select": "select";
}, never>;
}
export declare class NbCalendarRangeYearCellComponent<D> implements NbCalendarCell<D, NbCalendarRange<D>> {
    protected dateService: NbDateService<D>;
    date: D;
    min: D;
    max: D;
    selectedValue: NbCalendarRange<D>;
    select: EventEmitter<D>;
    constructor(dateService: NbDateService<D>);
    readonly selected: boolean;
    readonly today: boolean;
    readonly disabled: boolean;
    readonly year: number;
    onClick(): void;
    private smallerThanMin;
    private greaterThanMax;
    private yearStart;
    private yearEnd;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NbCalendarRangeYearCellComponent<any>>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NbCalendarRangeYearCellComponent<any>, "nb-calendar-range-year-cell", never, {
    "date": "date";
    "min": "min";
    "max": "max";
    "selectedValue": "selectedValue";
}, {
    "select": "select";
}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FsZW5kYXItcmFuZ2UtY2VsbHMuZC50cyIsInNvdXJjZXMiOlsiY2FsZW5kYXItcmFuZ2UtY2VsbHMuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7QUFJQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQXVCQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBa0JBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRXZlbnRFbWl0dGVyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBOYkNhbGVuZGFyQ2VsbCB9IGZyb20gJy4uL2NhbGVuZGFyLWtpdC9tb2RlbCc7XG5pbXBvcnQgeyBOYkRhdGVTZXJ2aWNlIH0gZnJvbSAnLi4vY2FsZW5kYXIta2l0L3NlcnZpY2VzL2RhdGUuc2VydmljZSc7XG5pbXBvcnQgeyBOYkNhbGVuZGFyUmFuZ2UgfSBmcm9tICcuL2NhbGVuZGFyLXJhbmdlLmNvbXBvbmVudCc7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBOYkNhbGVuZGFyUmFuZ2VEYXlDZWxsQ29tcG9uZW50PEQ+IGltcGxlbWVudHMgTmJDYWxlbmRhckNlbGw8RCwgTmJDYWxlbmRhclJhbmdlPEQ+PiB7XG4gICAgcHJvdGVjdGVkIGRhdGVTZXJ2aWNlOiBOYkRhdGVTZXJ2aWNlPEQ+O1xuICAgIGRhdGU6IEQ7XG4gICAgc2VsZWN0ZWRWYWx1ZTogTmJDYWxlbmRhclJhbmdlPEQ+O1xuICAgIHZpc2libGVEYXRlOiBEO1xuICAgIG1pbjogRDtcbiAgICBtYXg6IEQ7XG4gICAgZmlsdGVyOiAoRDogYW55KSA9PiBib29sZWFuO1xuICAgIHNlbGVjdDogRXZlbnRFbWl0dGVyPEQ+O1xuICAgIGNvbnN0cnVjdG9yKGRhdGVTZXJ2aWNlOiBOYkRhdGVTZXJ2aWNlPEQ+KTtcbiAgICByZWFkb25seSBpblJhbmdlOiBib29sZWFuO1xuICAgIHJlYWRvbmx5IHN0YXJ0OiBib29sZWFuO1xuICAgIHJlYWRvbmx5IGVuZDogYm9vbGVhbjtcbiAgICByZWFkb25seSB0b2RheTogYm9vbGVhbjtcbiAgICByZWFkb25seSBib3VuZGluZ01vbnRoOiBib29sZWFuO1xuICAgIHJlYWRvbmx5IHNlbGVjdGVkOiBib29sZWFuO1xuICAgIHJlYWRvbmx5IGVtcHR5OiBib29sZWFuO1xuICAgIHJlYWRvbmx5IGRpc2FibGVkOiBib29sZWFuO1xuICAgIHJlYWRvbmx5IGRheTogbnVtYmVyO1xuICAgIG9uQ2xpY2soKTogdm9pZDtcbiAgICBwcml2YXRlIHNtYWxsZXJUaGFuTWluO1xuICAgIHByaXZhdGUgZ3JlYXRlclRoYW5NYXg7XG4gICAgcHJpdmF0ZSBkb250Rml0RmlsdGVyO1xufVxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgTmJDYWxlbmRhclJhbmdlWWVhckNlbGxDb21wb25lbnQ8RD4gaW1wbGVtZW50cyBOYkNhbGVuZGFyQ2VsbDxELCBOYkNhbGVuZGFyUmFuZ2U8RD4+IHtcbiAgICBwcm90ZWN0ZWQgZGF0ZVNlcnZpY2U6IE5iRGF0ZVNlcnZpY2U8RD47XG4gICAgZGF0ZTogRDtcbiAgICBtaW46IEQ7XG4gICAgbWF4OiBEO1xuICAgIHNlbGVjdGVkVmFsdWU6IE5iQ2FsZW5kYXJSYW5nZTxEPjtcbiAgICBzZWxlY3Q6IEV2ZW50RW1pdHRlcjxEPjtcbiAgICBjb25zdHJ1Y3RvcihkYXRlU2VydmljZTogTmJEYXRlU2VydmljZTxEPik7XG4gICAgcmVhZG9ubHkgc2VsZWN0ZWQ6IGJvb2xlYW47XG4gICAgcmVhZG9ubHkgdG9kYXk6IGJvb2xlYW47XG4gICAgcmVhZG9ubHkgZGlzYWJsZWQ6IGJvb2xlYW47XG4gICAgcmVhZG9ubHkgeWVhcjogbnVtYmVyO1xuICAgIG9uQ2xpY2soKTogdm9pZDtcbiAgICBwcml2YXRlIHNtYWxsZXJUaGFuTWluO1xuICAgIHByaXZhdGUgZ3JlYXRlclRoYW5NYXg7XG4gICAgcHJpdmF0ZSB5ZWFyU3RhcnQ7XG4gICAgcHJpdmF0ZSB5ZWFyRW5kO1xufVxuIl19